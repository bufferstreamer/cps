<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.cps.credit.mapper.UserCreditMapper">

    <resultMap type="UserCredit" id="UserCreditResult">
            <result property="userCreditId" column="user_credit_id"/>
            <result property="userId" column="user_id"/>
            <result property="userName" column="user_name"/>
            <result property="creditScore" column="credit_score"/>
            <result property="updateDatetime" column="update_datetime"/>
    </resultMap>

    <sql id="selectUserCreditVo">
        select user_credit_id, user_id, user_name, credit_score, update_datetime
        from user_credit
    </sql>

    <select id="selectUserCreditList" parameterType="UserCredit" resultMap="UserCreditResult">
        <include refid="selectUserCreditVo"/>
        <where>
                        <if test="userId != null ">
                            and user_id = #{userId}
                        </if>
                        <if test="userName != null  and userName != ''">
                            and user_name like concat('%', #{userName}, '%')
                        </if>
                        <if test="creditScore != null ">
                            and credit_score = #{creditScore}
                        </if>
                        <if test="updateDatetime != null ">
                            and update_datetime = #{updateDatetime}
                        </if>
        </where>
    </select>

    <select id="selectUserCreditByUserId" resultMap="UserCreditResult">
        <include refid="selectUserCreditVo"/>
        where user_id = #{userId}
    </select>

    <select id="selectUserCreditByUserCreditId" parameterType="String"
            resultMap="UserCreditResult">
            <include refid="selectUserCreditVo"/>
            where user_credit_id = #{userCreditId}
    </select>

    <insert id="insertUserCredit" parameterType="UserCredit">
        insert into user_credit
        <trim prefix="(" suffix=")" suffixOverrides=",">
                    <if test="userCreditId != null">user_credit_id,
                    </if>
                    <if test="userId != null">user_id,
                    </if>
                    <if test="userName != null">user_name,
                    </if>
                    <if test="creditScore != null">credit_score,
                    </if>
                    <if test="updateDatetime != null">update_datetime,
                    </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
                    <if test="userCreditId != null">#{userCreditId},
                    </if>
                    <if test="userId != null">#{userId},
                    </if>
                    <if test="userName != null">#{userName},
                    </if>
                    <if test="creditScore != null">#{creditScore},
                    </if>
                    <if test="updateDatetime != null">#{updateDatetime},
                    </if>
        </trim>
    </insert>

    <update id="updateUserCredit" parameterType="UserCredit">
        update user_credit
        <trim prefix="SET" suffixOverrides=",">
                    <if test="userId != null">user_id =
                        #{userId},
                    </if>
                    <if test="userName != null">user_name =
                        #{userName},
                    </if>
                    <if test="creditScore != null">credit_score =
                        #{creditScore},
                    </if>
                    <if test="updateDatetime != null">update_datetime =
                        #{updateDatetime},
                    </if>
        </trim>
        where user_credit_id = #{userCreditId}
    </update>

    <delete id="deleteUserCreditByUserCreditId" parameterType="String">
        delete
        from user_credit where user_credit_id = #{userCreditId}
    </delete>

    <delete id="deleteUserCreditByUserCreditIds" parameterType="String">
        delete from user_credit where user_credit_id in
        <foreach item="userCreditId" collection="array" open="(" separator="," close=")">
            #{userCreditId}
        </foreach>
    </delete>

    <delete id="deleteAllUserCredit" >
        truncate table user_credit
    </delete>
</mapper>